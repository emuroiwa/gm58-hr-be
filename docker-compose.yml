version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: gm58-hr-postgres
    environment:
      POSTGRES_DB: gm58_hr
      POSTGRES_USER: hr_user
      POSTGRES_PASSWORD: hr_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - hr-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hr_user -d gm58_hr"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: gm58-hr-redis
    ports:
      - "6378:6379"
    volumes:
      - redis_data:/data
    networks:
      - hr-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gm58-hr-backend
    ports:
      - "8092:8080"
    environment:
      - DATABASE_URL=postgres://hr_user:hr_password@postgres:5432/gm58_hr?sslmode=disable
      - REDIS_URL=redis:6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - PORT=8080
      - ENVIRONMENT=development
      - LOG_LEVEL=info
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
      - BASE_CURRENCY=USD
      - SUPPORTED_CURRENCIES=USD,ZWL,ZAR,GBP,EUR
      - STORAGE_PATH=/app/storage
      - MAX_FILE_SIZE=10485760
    depends_on:
      - postgres
      - redis

    volumes:
      - ./storage:/app/storage
      - .:/app
    networks:
      - hr-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  hr-network:
    driver: bridge
